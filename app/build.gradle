apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false

        abortOnError false
        disable 'MissingTranslation'
    }

    signingConfigs {
        release {
            storeFile file(MYAPP_RELEASE_STORE_FILE)
            storePassword MYAPP_RELEASE_STORE_PASSWORD
            keyAlias MYAPP_RELEASE_KEY_ALIAS
            keyPassword MYAPP_RELEASE_KEY_PASSWORD
        }
        debug {
            storeFile file(MYAPP_RELEASE_STORE_FILE)
            storePassword MYAPP_RELEASE_STORE_PASSWORD
            keyAlias MYAPP_RELEASE_KEY_ALIAS
            keyPassword MYAPP_RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    flavorDimensions "sj"

    productFlavors {
        //开发环境
        dev {
            dimension "sj"
            buildConfigField "int", "ENV_TYPE", "1"
            applicationId 'com.wzq.sample.dev'
            manifestPlaceholders = [
                    channelName            : "dev",
                    app_name               : "Demodev",
                    network_security_config: "@xml/network_security_config",

            ]
        }

        //test测试环境
        mmctest {
            dimension "sj"
            buildConfigField "int", "ENV_TYPE", "2"
            applicationId 'com.wzq.sample.test'
            manifestPlaceholders = [
                    channelName            : "mmctest",
                    app_name               : "Demotest",
                    network_security_config: "@xml/network_security_config",
            ]
        }
        //生产环境
        product {
            dimension "sj"
            buildConfigField "int", "ENV_TYPE", "3"
            applicationId 'com.wzq.sample'
            manifestPlaceholders = [
                    channelName            : "product",
                    app_name               : "Demo",
                    network_security_config: "@xml/network_security_config_release",
            ]
        }

    }


    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def fileName
                if (variant.buildType.name.equals('release')) {
                    // 渠道名-版本名称-编译时间_release.apk
                    fileName = "${variant.productFlavors[0].name}-${defaultConfig.versionName}-${releaseTime()}_release.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    // 渠道名-版本名称-编译时间_debug.apk
                    fileName = "${variant.productFlavors[0].name}-${defaultConfig.versionName}-${releaseTime()}_debug.apk"
                }
                outputFileName = fileName

        }
    }

//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            variant.packageApplicationProvider.get().outputDirectory = new File(project.rootDir.absolutePath + "/apk")
//
//            def fileName
//            if (output.name == 'debug') {
//                fileName = "AppName-v${defaultConfig.versionName}-c${defaultConfig.versionCode}-test.apk"
//            } else {
//                fileName = "AppName-v${defaultConfig.versionName}-c${defaultConfig.versionCode}.apk"
//            }
//            output.outputFileName = fileName
//        }
//    }


}

dependencies {

    api project(':mvvmsmart')     //MVVMSmart
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //底部tabBar
    implementation 'me.majiajie:pager-bottom-tab-strip:2.2.5'
    api rootProject.ext.dependencies["smartRefreshLayout"] // 刷新框架
    implementation "androidx.room:room-runtime:2.2.3"
    annotationProcessor "androidx.room:room-compiler:2.2.3"
    // For Kotlin use kapt instead of annotationProcessor
    //material-dialogs
    api rootProject.ext.dependencies["material-dialogs-core"]
    api rootProject.ext.dependencies["material-dialogs-commons"]
    // https://github.com/H07000223/FlycoTabLayout
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

}
